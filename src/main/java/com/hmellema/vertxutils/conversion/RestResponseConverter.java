package com.hmellema.vertxutils.conversion;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.vertx.core.MultiMap;
import io.vertx.core.json.JsonObject;
import io.vertx.ext.web.RoutingContext;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

/**
 * Converts a response type to a json response.
 * 
 * <p>The response Type should be auto-generated from the OpenAPI spec
 * to ensure responses follow the Api contract
 * 
 * @param <ResponseTypeT> Model type to convert to a json reponse
 */
@Slf4j
@RequiredArgsConstructor
public class RestResponseConverter<ResponseTypeT> {
  /**
   * Converts an ResponseTypeT object (from the OpenApi models) to a json 
   * vertx response.
   * 
   * @param  outputObject Output object generated by Rest handler
   * @param  context Vert.x routing context
   */
  public void createResponse(
      final @NonNull ResponseTypeT outputObject,
      final @NonNull RoutingContext context
  ) {
    context.response().end(new JsonObject().mapFrom(outputObject).encodePrettily());
  } 
}
